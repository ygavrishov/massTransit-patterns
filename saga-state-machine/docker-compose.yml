version: "3.6"

services:
  rabbitmq:
    image: masstransit/rabbitmq:latest
    ports:
     - "5672:5672"
     - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: bitnami/postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=TicketSaga

  orchestrator:
    build:
      context: .
      dockerfile: ./TicketOffice.Orchestrator/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  api:
    build:
      context: .
      dockerfile: ./TicketOffice.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "8080:80"
    depends_on:
      rabbitmq:
        condition: service_healthy

  booking-service:
    build:
      context: .
      dockerfile: ./TicketOffice.BookingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy

  payment-service:
    build:
      context: .
      dockerfile: ./TicketOffice.PaymentService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy

  document-service:
    build:
      context: .
      dockerfile: ./TicketOffice.DocumentService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      rabbitmq:
        condition: service_healthy
